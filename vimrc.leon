source ~/.vim/vimrc
source ~/.vim/taglistrc

colorscheme railscasts

set nu
set sts=2
set sw=2
let g:fuzzy_ignore = "gems/*"

" ctags
set tags=~/.vim/tags,./tags;
set autochdir

" font
set guifont=Bitstream\ Vera\ Sans\ Mono\ 10

" encoding
set fenc=utf-8
set fencs=utf-8,usc-bom,euc-jp,gb18030,gbk,gb2312,cp936
set enc=utf-8
let &termencoding=&encoding


"Set to auto read when a file is changed from the outside
set autoread

"Set mapleader
let mapleader = ","
let g:mapleader = ","

"Fast reloading of the .vimrc
nmap <leader>s :source ~/.vimrc<CR>
"Fast editing of .vimrc
nmap <leader>m :e ~/.vimrc<CR>
"Quick visit quickfix list
nmap <leader>cn :cn<CR>
nmap <leader>cp :cp<CR>
nmap <leader>cw :cw<CR>
"Quick visit buffer list
nmap <leader>bw :bw<CR>
nmap <leader>bn :bn<CR>
nmap <leader>bp :bp<CR>



"Vertical split then hop to new buffer
noremap <leader>v :vsp^M^W^W<CR>
noremap <leader>h :split^M^W^W<CR>

" Mappings
" ********************************************************************
" Professor VIM says '87% of users prefer jj over Esc', jj abrams strongly disagrees
imap jj <Esc>
imap uu _
imap hh =>
imap aa @
imap kk ->

"for C -- http://vim.wikia.com/wiki/Delete_C_Function
map <silent><leader>df 0d/{<Enter>daB

"for Ruby -- http://vim.wikia.com/wiki/Delete_C_Function
map <silent><leader>dd ?def <Enter>d%
map <silent><leader>di ?if <Enter>d%

" Inser New Line
" **************************************************************
"nmap <S-Enter> O<Esc>
"nmap <Enter> o<Esc>
" do not insert a comment leader after an enter, (no work, fix!!)
set fo-=r 


" Cursor Movement
" *************************************************************
" Make cursor move by visual lines instead of file lines (when wrapping)
nmap <up> gk
nmap <down> gj

" PHP 
" *************************************************************
nmap <leader>cp :w<CR>:!php -l %<CR>
let phplinkrule_check=system("file ~/.vim/phplinkrule")
let phpri=stridx(phplinkrule_check, "ERROR") 
if phpri == -1
    source ~/.vim/phplinkrule
    function! PHP_FireFox()
        let localpath=getcwd()."/".expand("%")
        let filepath=PHP_ParseLink(localpath)
        silent execute "!firefox"." ".filepath
    endfunction
    map <leader>rp :call PHP_FireFox()<CR>
end

" -----------------------------------------------------------------------------
"  " | Pluggins |
"  "
"  -----------------------------------------------------------------------------

" NERDTree
"********************************************************************
noremap <leader>n :NERDTreeToggle<CR>

" User instead of Netrw when doing an edit /foobar
let NERDTreeHijackNetrw=1

" Single click for everything
let NERDTreeMouseMode=1


" Taglist
noremap <leader>t :TlistToggle<CR>
let Tlist_Ctags_Cmd="/usr/bin/ctags"

"Paste toggle - when pasting something in, don't indent.
set pastetoggle=<F3>


" Omni Completion
" *************************************************************
autocmd FileType html set omnifunc=htmlcomplete#CompleteTags
autocmd FileType python set omnifunc=pythoncomplete#Complete
autocmd FileType javascript set omnifunc=javascriptcomplete#CompleteJS
autocmd FileType css set omnifunc=csscomplete#CompleteCSS
autocmd FileType xml set omnifunc=xmlcomplete#CompleteTags
autocmd FileType php set omnifunc=phpcomplete#CompletePHP
autocmd FileType c set omnifunc=ccomplete#Complete
autocmd FileType cpp set omnifunc=cppcomplete#Complete
autocmd FileType ruby,eruby set omnifunc=rubycomplete#Complete

set expandtab
set cindent
set smartindent
set autoindent
set tabstop=4 shiftwidth=4 softtabstop=4 
autocmd FileType ruby,eruby set tabstop=2 shiftwidth=2 softtabstop=2 


inoremap <expr> <Esc>      pumvisible() ? "\<C-e>" : "\<Esc>"
inoremap <expr> <C-J>      pumvisible() ? "\<PageDown>\<C-N>\<C-P>":"\<C-J>"
inoremap <expr> <C-K>      pumvisible() ? "\<PageUp>\<C-P>\<C-N>":"\<C-K>"
inoremap <C-]>             <C-X><C-]>

" for convenience in insert mode
inoremap ( ()<ESC>i
inoremap ) <c-r>=ClosePair(')')<CR>
inoremap { {}<ESC>i
inoremap } <c-r>=ClosePair('}')<CR>
inoremap [ []<ESC>i
inoremap ] <c-r>=ClosePair(']')<CR>

function! ClosePair(char)
    if getline('.')[col('.') - 1] == a:char
        return "\<Right>"
    else
        return a:char
    endif
endf

inoremap <S-Enter> <Esc>O
inoremap <C-Enter> <Esc>o
inoremap <C-H> <Esc>bi
inoremap <C-L> <Esc>ea
inoremap <C-J> <Esc>ja
inoremap <C-K> <Esc>ka

